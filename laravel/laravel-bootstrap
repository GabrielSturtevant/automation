#!/bin/bash

# Alex Hernandez
# Bootstrapping A Laravel Project
# v1.0.0

# GLOBAL VARS
NPM=$(which npm)
PHP=$(which php)
CURL=$(which curl)
BOWER=$(which bower)
COMPOSER=$(which composer)

PROJECT_NAME=""
PROJECT_DIR=$(pwd)

# PACKAGE/DEPENDANCY AVAILABILITY CHECK
if [[ -z ${NPM} ]]; then
  echo "Oh no ruby is missing!"
  exit 2
elif [[ -z ${PHP} ]]; then
  echo "Oh no brew is missing!"
  exit 2
elif [[ -z ${CURL} ]]; then
  echo "Oh no curl is missing!"
  exit 2
elif [[ -z ${BOWER} ]]; then
  echo "Oh no bower is missing!"
  exit 2
elif [[ -z ${COMPOSER} ]]; then
  echo "Oh no composer is missing!"
  exit 2
fi

# =================================================
# IMPROVEMENTS: ADD REPO TO IMPROVE FILE CREATION
# THAT WILL CLEAN UP CODE AND MAKE IT EASIER
# =================================================

# CREATE ENV + APP:KEY
while true; do
  printf "\n"
  read -p "Do you wish to add a '.env' file (Y/n)? " answer
  case $answer in
  [Yy]* )
    if [[ ! -f "${PROJECT_DIR}/.env.example" ]]; then
      echo "File not found!"
      echo "Are you in the correct project folder?"
      exit 2
    else
      cp .env.example .env
      echo "Your env was updated successfully!"
      ${PHP} artisan key:generate
    fi
    break
    ;;
  [Nn]* ) :
    break
    ;;
  * )
    echo "Please answer y or n."
    ;;
  esac
done

# Create Laravel View Directories
while true; do
  printf "\n"
  read -p "Do you wish to create the view directories? (Y/n) " answer
  case $answer in
  [Yy]* )
    if [[ ! -d "${PROJECT_DIR}/resources" ]]; then
      echo "Resources folder not found!"
      exit 2
    else
      mkdir "resources/views/pages"
      pushd "resources/views/pages"
        page_template_file="landing.blade.php"
        page_template_gist_uri="https://gist.githubusercontent.com/alexhernandez/486a758fdcac73e27687/raw/7049dbe66ac814038227cccc7f3d1b6f89c5a4a6/page.blade.php"
        ${CURL} -o "${page_template_file}" ${page_template_gist_uri}
      popd
      echo "Your ${page_template_file} was updated successfully!"

      mkdir "resources/views/layouts"
      pushd "resources/views/layouts"
        mkdir "partials"
        master_template_file="master.blade.php"
        master_template_gist_uri="https://gist.githubusercontent.com/alexhernandez/bc9f4a1994732e15df3d/raw/2d7d31fa89c3d231156e255d58feb05dc294f273/master.blade.php"
        ${CURL} -o "${master_template_file}" ${master_template_gist_uri}
      popd
      printf "\n"
      echo "Your ${master_template_file} was updated successfully!"
      echo "All your project folders & files were updated successfully!"
    fi
    break
    ;;
  [Nn]* ) :
    break
    ;;
  * )
    echo "Please answer y or n."
    ;;
  esac
done

while true; do
  printf "\n"
  read -p "Do you wish to add all project dependancies? (Y/n) " answer
  case $answer in
  [Yy]* )
    # Create ".bowerrc" file
    bower_file=".bowerrc"
    bower_gist_uri="https://gist.githubusercontent.com/alexhernandez/c3b0d97538f5869d7f86/raw/8411a064facde1ea007585471f7683a0d546e2eb/.bowerrc"
    ${CURL} -o "${bower_file}" ${bower_gist_uri}
    echo "Your ${bower_file} was created successfully!"

    # Create "elixir.json" file
    elixir_file="elixir.json"
    elixir_gist_uri="https://gist.githubusercontent.com/alexhernandez/963c188f23e14e33929e/raw/a692c7ba6a911292d7d17875dde8c482b22c08a8/elixir.json"
    ${CURL} -o "${elixir_file}" ${elixir_gist_uri}
    echo "Your ${elixir_file} was created successfully!"

    # Create "Gulpfile" file
    gulp_file="gulpfile.js"
    gulp_gist_uri="https://gist.githubusercontent.com/alexhernandez/42df05909d0dbb727ce2/raw/8d52543e942a6191b8e0b0953451e6a565c278fd/gulpfile.js"
    ${CURL} -o "${gulp_file"} ${gulp_gist_uri}
    echo "Your ${gulp_file} was updated successfully!"

    # Add Form/HTML Facade & update config/app.php
    composer_package="illuminate/html"
    printf "\n"
    echo "Fetching '${composer_package}'..."
    ${COMPOSER} require ${composer_package}
    echo "Your composer package '${composer_package}' was added successfully!"

    printf "\n"
    config_app_file="app.php"
    pushd "config"
      # NEED BETTER SOLUTION FOR THIS... but it works
      # Update "Providers" array
      sed -ie "/'providers'/ a\\
      \\    Illuminate\\\Html\\\HtmlServiceProvider::class, \\
      " ${config_app_file}
      # Update Aliases" array
      sed -ie "/'aliases'/ a\\
      \\    'Form'      => Illuminate\\\Html\\\FormFacade::class, \\
      \\    'HTML'      => Illuminate\\\Html\\\HtmlFacade::class, \\
      " ${config_app_file}
      # Kill That Random File thats being Created... WTF???
      rm "${config_app_file}e"
      echo "Your ${config_app_file} was updated successfully!"
    popd

    # Add Bower to project
    printf "\n Lets Initialize Bower... \n"
    ${BOWER} init

    # Install all Node Packages, --loglevel silent??? Look into this.
    printf "\n Now installing Node dependencies... \n Hang tight. This might take a bit... \n"
    ${NPM} install

    printf "\n Yo Man... Your Laravel Application Has Been Successfully Bootstrapped! \n Wooooooooooot!!!"
    break
    ;;
  [Nn]* ) :
    break
    ;;
  * )
    echo "Please answer y or n."
    ;;
  esac
done
